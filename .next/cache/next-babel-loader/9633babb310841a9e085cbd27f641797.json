{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport handleViewport from 'react-in-viewport'; // import Lottie from 'lottie-react';\n\nimport Lottie from 'react-lottie';\n\nfunction TheLottie(_ref) {\n  var animationData = _ref.animationData,\n      inViewport = _ref.inViewport,\n      forwardedRef = _ref.forwardedRef,\n      addClass = _ref.addClass;\n  // const [paused, setPaused] = useState(true);\n  // const elem = useRef();\n  // const changePausedStatus = () => {\n  // \tconst scroll = window.scrollY || window.pageYOffset;\n  // \tconst boundsTop = elem.current.getBoundingClientRect().top + scroll;\n  // \tconst viewport = {\n  // \t\tbottom: scroll + window.innerHeight,\n  // \t\ttop: scroll\n  // \t};\n  // \tconst bounds = {\n  // \t\tbottom: boundsTop + elem.current.clientHeight,\n  // \t\ttop: boundsTop\n  // \t};\n  // \tif (bounds.bottom > viewport.top || bounds.top < viewport) {\n  // \t\tconsole.log('Reproduce animación');\n  // \t\tsetPaused(false);\n  // \t} else {\n  // \t\tconsole.log('Detiene animación');\n  // \t\tsetPaused(true);\n  // \t}\n  // };\n  // useEffect(() => {\n  // \tchangePausedStatus();\n  // \tdocument.addEventListener('scroll', changePausedStatus);\n  // \twindow.addEventListener('resize', changePausedStatus);\n  // \twindow.addEventListener('orientationchange', changePausedStatus);\n  // \treturn () => {\n  // \t\tdocument.removeEventListener('scroll', changePausedStatus);\n  // \t\twindow.removeEventListener('resize', changePausedStatus);\n  // \t\twindow.removeEventListener('orientationchange', changePausedStatus);\n  // \t};\n  // }, []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"holder-lottie-item pointer-events-none \".concat(addClass) // ref={elem}\n    ,\n    ref: forwardedRef,\n    children: /*#__PURE__*/_jsx(Lottie, {\n      options: {\n        loop: true,\n        autoplay: true,\n        animationData: animationData\n      },\n      isPaused: inViewport ? false : true\n    })\n  });\n}\n\nexport var LottieHolder = handleViewport(TheLottie);","map":null,"metadata":{},"sourceType":"module"}