{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/roganoalien/git_projects/transparenta-2021/components/ActiveLink.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Children } from 'react';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nconst ActiveLink = (_ref) => {\n  let {\n    children,\n    activeClassName\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"activeClassName\"]);\n\n  const {\n    asPath\n  } = useRouter();\n  const child = React.Children.only(children);\n  const childClassName = child.props.className || '';\n  const className = asPath === props.href || asPath === props.as ? `${childClassName} ${activeClassName}`.trim() : childClassName;\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/React.cloneElement(child, {\n      className: className || null\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n\nActiveLink.propTypes = {\n  activeClassName: PropTypes.string.isRequired\n};\nexport default ActiveLink;","map":{"version":3,"sources":["/Users/roganoalien/git_projects/transparenta-2021/components/ActiveLink.js"],"names":["React","Children","useRouter","PropTypes","Link","ActiveLink","children","activeClassName","props","asPath","child","only","childClassName","className","href","as","trim","cloneElement","propTypes","string","isRequired"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,UAAU,GAAG,UAA6C;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA4C;AAAA,MAAZC,KAAY;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAaP,SAAS,EAA5B;AACA,QAAMQ,KAAK,GAAGV,KAAK,CAACC,QAAN,CAAeU,IAAf,CAAoBL,QAApB,CAAd;AACA,QAAMM,cAAc,GAAGF,KAAK,CAACF,KAAN,CAAYK,SAAZ,IAAyB,EAAhD;AAEA,QAAMA,SAAS,GACdJ,MAAM,KAAKD,KAAK,CAACM,IAAjB,IAAyBL,MAAM,KAAKD,KAAK,CAACO,EAA1C,GACI,GAAEH,cAAe,IAAGL,eAAgB,EAArC,CAAuCS,IAAvC,EADH,GAEGJ,cAHJ;AAKA,sBACC,QAAC,IAAD,kCAAUJ,KAAV;AAAA,2BACER,KAAK,CAACiB,YAAN,CAAmBP,KAAnB,EAA0B;AAC1BG,MAAAA,SAAS,EAAEA,SAAS,IAAI;AADE,KAA1B;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAjBD;;AAmBAR,UAAU,CAACa,SAAX,GAAuB;AACtBX,EAAAA,eAAe,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC;AADZ,CAAvB;AAIA,eAAef,UAAf","sourcesContent":["import React, { Children } from 'react';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nconst ActiveLink = ({ children, activeClassName, ...props }) => {\n\tconst { asPath } = useRouter();\n\tconst child = React.Children.only(children);\n\tconst childClassName = child.props.className || '';\n\n\tconst className =\n\t\tasPath === props.href || asPath === props.as\n\t\t\t? `${childClassName} ${activeClassName}`.trim()\n\t\t\t: childClassName;\n\n\treturn (\n\t\t<Link {...props}>\n\t\t\t{React.cloneElement(child, {\n\t\t\t\tclassName: className || null\n\t\t\t})}\n\t\t</Link>\n\t);\n};\n\nActiveLink.propTypes = {\n\tactiveClassName: PropTypes.string.isRequired\n};\n\nexport default ActiveLink;\n"]},"metadata":{},"sourceType":"module"}