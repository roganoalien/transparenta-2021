{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/roganoalien/git_projects/transparenta-2021/components/LottieHolder.js\";\nimport React, { useState, useEffect, useRef } from 'react'; // import Lottie from 'lottie-react';\n\nimport Lottie from 'react-lottie';\n\nfunction LottieHolder({\n  animationData\n}) {\n  const {\n    0: paused,\n    1: setPaused\n  } = useState(true);\n  const elem = useRef(); // const changePausedStatus = () => {\n  // \tconst scroll = window.scrollY || window.pageYOffset;\n  // \tconst boundsTop = elem.current.getBoundingClientRect().top + scroll;\n  // \tconst viewport = {\n  // \t\tbottom: scroll + window.innerHeight,\n  // \t\ttop: scroll\n  // \t};\n  // \tconst bounds = {\n  // \t\tbottom: boundsTop + elem.current.clientHeight,\n  // \t\ttop: boundsTop\n  // \t};\n  // \tif (bounds.bottom > viewport.top || bounds.top < viewport) {\n  // \t\tconsole.log('Reproduce animaci贸n');\n  // \t\tsetPaused(false);\n  // \t} else {\n  // \t\tconsole.log('Detiene animaci贸n');\n  // \t\tsetPaused(true);\n  // \t}\n  // };\n  // useEffect(() => {\n  // \tchangePausedStatus();\n  // \tdocument.addEventListener('scroll', changePausedStatus);\n  // \twindow.addEventListener('resize', changePausedStatus);\n  // \twindow.addEventListener('orientationchange', changePausedStatus);\n  // \treturn () => {\n  // \t\tdocument.removeEventListener('scroll', changePausedStatus);\n  // \t\twindow.removeEventListener('resize', changePausedStatus);\n  // \t\twindow.removeEventListener('orientationchange', changePausedStatus);\n  // \t};\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holder-lottie-item\",\n    ref: elem,\n    children: /*#__PURE__*/_jsxDEV(Lottie, {\n      options: {\n        loop: true,\n        autoplay: true,\n        animationData\n      },\n      isPaused: paused\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}\n\nexport default LottieHolder;","map":{"version":3,"sources":["/Users/roganoalien/git_projects/transparenta-2021/components/LottieHolder.js"],"names":["React","useState","useEffect","useRef","Lottie","LottieHolder","animationData","paused","setPaused","elem","loop","autoplay"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAyC;AACxC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMQ,IAAI,GAAGN,MAAM,EAAnB,CAFwC,CAIxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAoC,IAAA,GAAG,EAAEM,IAAzC;AAAA,2BAEC,QAAC,MAAD;AACC,MAAA,OAAO,EAAE;AACRC,QAAAA,IAAI,EAAE,IADE;AAERC,QAAAA,QAAQ,EAAE,IAFF;AAGRL,QAAAA;AAHQ,OADV;AAMC,MAAA,QAAQ,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;AAED,eAAeF,YAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n// import Lottie from 'lottie-react';\nimport Lottie from 'react-lottie';\n\nfunction LottieHolder({ animationData }) {\n\tconst [paused, setPaused] = useState(true);\n\tconst elem = useRef();\n\n\t// const changePausedStatus = () => {\n\t// \tconst scroll = window.scrollY || window.pageYOffset;\n\t// \tconst boundsTop = elem.current.getBoundingClientRect().top + scroll;\n\t// \tconst viewport = {\n\t// \t\tbottom: scroll + window.innerHeight,\n\t// \t\ttop: scroll\n\t// \t};\n\t// \tconst bounds = {\n\t// \t\tbottom: boundsTop + elem.current.clientHeight,\n\t// \t\ttop: boundsTop\n\t// \t};\n\t// \tif (bounds.bottom > viewport.top || bounds.top < viewport) {\n\t// \t\tconsole.log('Reproduce animaci贸n');\n\t// \t\tsetPaused(false);\n\t// \t} else {\n\t// \t\tconsole.log('Detiene animaci贸n');\n\t// \t\tsetPaused(true);\n\t// \t}\n\t// };\n\n\t// useEffect(() => {\n\t// \tchangePausedStatus();\n\t// \tdocument.addEventListener('scroll', changePausedStatus);\n\t// \twindow.addEventListener('resize', changePausedStatus);\n\t// \twindow.addEventListener('orientationchange', changePausedStatus);\n\t// \treturn () => {\n\t// \t\tdocument.removeEventListener('scroll', changePausedStatus);\n\t// \t\twindow.removeEventListener('resize', changePausedStatus);\n\t// \t\twindow.removeEventListener('orientationchange', changePausedStatus);\n\t// \t};\n\t// }, []);\n\n\treturn (\n\t\t<div className=\"holder-lottie-item\" ref={elem}>\n\t\t\t{/* {paused && <Lottie animationData={animationData}  />} */}\n\t\t\t<Lottie\n\t\t\t\toptions={{\n\t\t\t\t\tloop: true,\n\t\t\t\t\tautoplay: true,\n\t\t\t\t\tanimationData\n\t\t\t\t}}\n\t\t\t\tisPaused={paused}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default LottieHolder;\n"]},"metadata":{},"sourceType":"module"}